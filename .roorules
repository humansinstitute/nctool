Plannning:

- We will create detailed PRDs, plans and testing strageies for all new featues.
- You will be given a reference to a specific feature folder
- You should review feature documentation and potentially product level docs.
- You should follow the plan and ensure we use human testing to structure our development and ensure we're on track.
- Always review files as needed in plan mode to improve your delivery plan, don't leave this to the act phase
- We should ensure that the plan prior to implementation should be a detailed and verbose plan with relevant code / psudo code examnples that a junior develper could follow.

Act:

- When acting on a plan, follow the stage plan and the scope of changes you have been asked to make.
- Always stop at the end of a stage and seek confirmation from the user that human testing has passed
- Always restate the testing steps and the remaining stages of the plan on completion of a stage implementaiton.
- Always state the next action from the plan and the remaining planing steps in your completion message.
- Note all aspects of the system are run from the PM2 ecosystem.config.cjs
- Please be aware that processes may already be running and need stopping / restarting to test effectively
- Always resolve failed unit or integration tests before continuing unless you specifically ran the test knowing the tests would fail

DevOps:

- The project uses PM2 to manage services, start, end, restart loggin etc.
- When testing the prohect it is already likely running locally using PM2
- Project can be fully setup with PM2 restart ecosystem.config.cjs
- PM2 is always run from the root of the project direcory and uses the root as the working directory of the project.

Module Systems rules

- Project uses ES Modules exclusively - ensure package.json has "type": "module"
- Never mix import/export with require() in the same file
- For main module detection in ES Modules, use: process.argv[1] === fileURLToPath(import.meta.url)
- Always import fileURLToPath from 'url' when converting import.meta.url to paths
- Worker scripts must use ES Module main detection pattern, not require.main === module
- When converting CommonJS to ESM, audit ALL files for require.main checks before changing package.json
- Before adding "type": "module" to package.json, search project for "require.main === module"
- Convert all require.main checks to ES Module equivalent before package.json change
- Update Jest config to handle ES Modules (may need --experimental-vm-modules)
- Test both main app startup AND worker scripts after conversion
- Worker scripts need command-line argument handling updated for ESM pattern
